#!/bin/bash

# Set the download directory
download_dir="/mnt/Downloads/1windows/Downloads"

# Check if there's content in the clipboard
url=$(xclip -selection clipboard -o)

# If clipboard is empty, prompt for YouTube URL
if [[ -z "$url" || $url != https://www.youtube.com/* ]]; then
    notify-send "󰗃  Youtube Download" "Error: No YouTube URL found in clipboard." -t 1500
    exit 1
fi

# Download the video or playlist
if [[ $url == *list=* ]]; then
    # Playlist URL
    echo "Downloading playlist..."
    notify-send "󰗃  Youtube Download" "Downloading playlist..." -t 1500
    output=$(yt-dlp -o "$download_dir/%(playlist_title)s/%(playlist_index)s - %(title)s.%(ext)s" \
             --add-metadata --ignore-errors --format "bestvideo[height<=1080][ext=mp4]+bestaudio[ext=m4a]/best[height<=1080][ext=mp4]/best[ext=mp4]/best" \
             --merge-output-format mkv  \
             "$url")
else
    # Single video URL
    echo "Downloading video..."
    notify-send "󰗃  Youtube Download" "Downloading video..." -t 1500
    output=$(yt-dlp -o "$download_dir/%(title)s.%(ext)s" \
             --add-metadata --ignore-errors --format "bestvideo[height<=1080][ext=mp4]+bestaudio[ext=m4a]/best[height<=1080][ext=mp4]/best[ext=mp4]/best" \
             --merge-output-format mkv  \
             "$url")
fi

# Get the video name 
video_info=$(yt-dlp --get-title "$url")
video_name=$(echo "$video_info" | sed -n 1p)

# Check if the download was successful
if [[ $output == *ERROR* ]]; then
    # Show error message if download failed
    notify-send -u critical "Youtube Download" "Download failed"
else
    # Show success notification
    notify-send "󰗃  Youtube Download" "Download completed....\n$video_name " 
fi

exit 0
